# Production Environment Variables Example
# Copy this file to .env.production and fill in your actual values
# NEVER commit .env.production to version control!

# Environment Configuration
ENVIRONMENT=production
LOG_LEVEL=info
DEBUG=False

# Security Keys (MUST CHANGE ALL OF THESE)
SECRET_KEY=CHANGE_THIS_TO_A_SECURE_RANDOM_STRING_USE_OPENSSL_RAND_HEX_32
API_KEY=CHANGE_THIS_TO_YOUR_API_KEY_FOR_BASIC_AUTH
ADMIN_API_KEY=CHANGE_THIS_TO_A_DIFFERENT_SECURE_ADMIN_KEY
ACCESS_TOKEN_EXPIRE_MINUTES=1440  # 24 hours for production

# Database Configuration
DATABASE_URL=postgresql://postgres:CHANGE_THIS_STRONG_PASSWORD@postgres:5432/image2model
POSTGRES_SERVER=postgres  # Docker service name
POSTGRES_USER=postgres
POSTGRES_PASSWORD=CHANGE_THIS_STRONG_PASSWORD
POSTGRES_DB=image2model
POSTGRES_PORT=5432

# Redis Configuration (with authentication)
REDIS_URL=redis://:CHANGE_THIS_REDIS_PASSWORD@redis:6379/0
REDIS_PASSWORD=CHANGE_THIS_REDIS_PASSWORD
REDIS_PORT=6379
CELERY_BROKER_URL=redis://:CHANGE_THIS_REDIS_PASSWORD@redis:6379/0
CELERY_RESULT_BACKEND=redis://:CHANGE_THIS_REDIS_PASSWORD@redis:6379/1

# Backend Configuration
BACKEND_CORS_ORIGINS=https://yourdomain.com,https://www.yourdomain.com
BACKEND_PORT=8000
BACKEND_HOST=backend
ALLOWED_HOSTS=yourdomain.com,www.yourdomain.com

# Rate Limiting (stricter for production)
RATE_LIMIT_PER_MINUTE=10
RATE_LIMIT_PER_HOUR=100

# File Upload Settings
UPLOAD_MAX_FILES=25
UPLOAD_MAX_SIZE_MB=10

# FAL.AI API Configuration
FAL_API_KEY=YOUR_ACTUAL_FAL_API_KEY_HERE

# Frontend Configuration
FRONTEND_PORT=80
FRONTEND_SSL_PORT=443

# Worker Configuration
WORKER_CONCURRENCY=4

# Flower Configuration (optional monitoring)
FLOWER_PORT=5555
FLOWER_BASIC_AUTH=admin:CHANGE_THIS_STRONG_ADMIN_PASSWORD

# SSL Configuration (if using HTTPS)
SSL_CERT_PATH=/etc/nginx/ssl/cert.pem
SSL_KEY_PATH=/etc/nginx/ssl/key.pem

# Backup Configuration (optional)
BACKUP_RETENTION_DAYS=30
BACKUP_SCHEDULE="0 2 * * *"  # Daily at 2 AM

# Performance Tuning
GUNICORN_WORKERS=4
NGINX_WORKER_PROCESSES=auto
NGINX_WORKER_CONNECTIONS=1024

# Monitoring (optional)
ENABLE_METRICS=true
METRICS_PORT=9090

# Docker Configuration
COMPOSE_PROJECT_NAME=image2model

# Instructions for generating secure values:
# SECRET_KEY: openssl rand -hex 32
# API_KEY: openssl rand -hex 24
# ADMIN_API_KEY: openssl rand -hex 24
# Database/Redis passwords: openssl rand -base64 32

# Security Headers (handled by nginx, for reference)
# SECURE_SSL_REDIRECT=true
# SESSION_COOKIE_SECURE=true
# CSRF_COOKIE_SECURE=true