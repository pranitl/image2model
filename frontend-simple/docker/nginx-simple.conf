server {
    listen 80;
    server_name localhost;
    
    # Root directory for simple frontend
    root /usr/share/nginx/html;
    index index.html;
    
    # Enable GZIP compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/json application/xml+rss application/xhtml+xml image/svg+xml;
    gzip_disable "msie6";
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline' 'unsafe-eval'; frame-ancestors 'self';" always;
    
    # Client max body size for file uploads (250MB as per requirements)
    client_max_body_size 250M;
    
    # Serve static HTML files with no-cache
    location ~* \.(html)$ {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        expires 0;
    }
    
    # Cache CSS files for 1 year
    location ~* \.(css)$ {
        add_header Content-Type text/css;
        add_header Cache-Control "public, max-age=31536000, immutable";
        expires 1y;
    }
    
    # Cache JavaScript files for 1 year
    location ~* \.(js)$ {
        add_header Content-Type application/javascript;
        add_header Cache-Control "public, max-age=31536000, immutable";
        expires 1y;
    }
    
    # Cache image assets for 1 year
    location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
        add_header Cache-Control "public, max-age=31536000, immutable";
        expires 1y;
    }
    
    # Cache font files for 1 year
    location ~* \.(woff|woff2|ttf|otf|eot)$ {
        add_header Cache-Control "public, max-age=31536000, immutable";
        add_header Access-Control-Allow-Origin "*";
        expires 1y;
    }
    
    # API v1 endpoints proxy
    location /api/v1/ {
        proxy_pass http://backend:8000/api/v1/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts for long-running operations
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 300s;
        
        # Buffer settings for large file uploads
        proxy_buffering off;
        proxy_request_buffering off;
    }
    
    # Server-Sent Events endpoint - special handling
    location ~ ^/api/v1/status/tasks/.*/stream$ {
        proxy_pass http://backend:8000;
        proxy_http_version 1.1;
        proxy_set_header Connection '';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # SSE specific settings
        proxy_buffering off;
        proxy_cache off;
        proxy_read_timeout 86400s;
        keepalive_timeout 86400s;
        proxy_set_header Cache-Control 'no-cache';
        proxy_set_header X-Accel-Buffering 'no';
        
        # Allow EventSource reconnections
        add_header Cache-Control 'no-cache';
        add_header X-Accel-Buffering 'no';
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Serve static files with fallback to index.html
    location / {
        try_files $uri $uri/ /index.html;
    }
    
    # Custom error pages
    error_page 404 /404.html;
    location = /404.html {
        internal;
    }
    
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        internal;
    }
}