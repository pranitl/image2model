# Development Environment Configuration
# Copy this file to .env and update with your values

# Environment Configuration
ENVIRONMENT=development
LOG_LEVEL=debug
DEBUG=False

# Security Keys
SECRET_KEY=your-secret-key-here-use-openssl-rand-hex-32
API_KEY=test-api-key-for-development
ADMIN_API_KEY=test-admin-api-key-for-development
ACCESS_TOKEN_EXPIRE_MINUTES=11520  # 8 days

# Database Configuration
DATABASE_URL=postgresql://postgres:password@localhost:5432/image2model
POSTGRES_SERVER=localhost
POSTGRES_USER=postgres
POSTGRES_PASSWORD=password
POSTGRES_DB=image2model
POSTGRES_PORT=5432

# Redis Configuration
REDIS_URL=redis://localhost:6379/0
REDIS_PASSWORD=
REDIS_PORT=6379
CELERY_BROKER_URL=redis://localhost:6379/0
CELERY_RESULT_BACKEND=redis://localhost:6379/0

# Backend Configuration
BACKEND_CORS_ORIGINS=http://localhost:3000,http://frontend:3000
BACKEND_PORT=8000
BACKEND_HOST=localhost
ALLOWED_HOSTS=localhost,127.0.0.1

# Rate Limiting
RATE_LIMIT_PER_MINUTE=60
RATE_LIMIT_PER_HOUR=1000

# File Upload Settings
UPLOAD_MAX_FILES=25
UPLOAD_MAX_SIZE_MB=10

# FAL.AI API Configuration
FAL_API_KEY=your-fal-api-key-here

# Frontend Configuration
FRONTEND_PORT=3000
FRONTEND_SSL_PORT=443

# Worker Configuration
WORKER_CONCURRENCY=2

# Development Tools
FLOWER_PORT=5555
FLOWER_BASIC_AUTH=admin:password

# Docker Configuration
COMPOSE_PROJECT_NAME=image2model
DOCKER_BUILDKIT=1
COMPOSE_DOCKER_CLI_BUILD=1

# Frontend Configuration (for reference - simple frontend doesn't use env vars)
NODE_ENV=development

# Optional: External API Keys (not used in current implementation)
# OPENAI_API_KEY=your-openai-api-key
# HUGGING_FACE_API_KEY=your-hugging-face-key